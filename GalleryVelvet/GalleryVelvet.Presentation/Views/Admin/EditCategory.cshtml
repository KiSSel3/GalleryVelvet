@model GalleryVelvet.BLL.DTOs.Admin.UpdateCategoryDto

@{
    Layout = "_Layout";
    ViewData["Title"] = "Редактирование категории";
    var categoryId = ViewData["CategoryId"];
}

<style>
    .admin-page {
        padding: 30px 20px;
        max-width: 800px;
        margin: 0 auto;
        min-height: calc(100vh - 70px);
        background: #f8f9fa;
    }

    .admin-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        background: white;
        padding: 25px 30px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .admin-title {
        font-size: 28px;
        font-weight: 600;
        color: #2c3e50;
        margin: 0;
    }

    .admin-breadcrumb {
        font-size: 14px;
        color: #6c757d;
    }

    .admin-breadcrumb a {
        color: #3498db;
        text-decoration: none;
    }

    .admin-breadcrumb a:hover {
        text-decoration: underline;
    }

    .back-btn {
        padding: 12px 25px;
        background: linear-gradient(135deg, #95a5a6, #7f8c8d);
        color: white;
        text-decoration: none;
        border-radius: 8px;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
    }

    .back-btn:hover {
        background: linear-gradient(135deg, #7f8c8d, #95a5a6);
        color: white;
        text-decoration: none;
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(149, 165, 166, 0.3);
    }

    .form-card {
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .form-header {
        background: linear-gradient(135deg, #f39c12, #e67e22);
        color: white;
        padding: 25px 30px;
        text-align: center;
        position: relative;
        overflow: hidden;
    }

    .form-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="20" cy="20" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="40" cy="40" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="60" cy="60" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="80" cy="80" r="1" fill="rgba(255,255,255,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>') repeat;
        opacity: 0.3;
    }

    .form-icon {
        width: 80px;
        height: 80px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 36px;
        margin: 0 auto 20px;
        position: relative;
        z-index: 1;
    }

    .form-title {
        font-size: 24px;
        font-weight: 600;
        margin: 0;
        position: relative;
        z-index: 1;
    }

    .form-subtitle {
        font-size: 16px;
        opacity: 0.9;
        margin: 10px 0 0;
        position: relative;
        z-index: 1;
    }

    .form-body {
        padding: 40px 30px;
    }

    .form-group {
        margin-bottom: 25px;
    }

    .form-label {
        display: block;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 8px;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .form-input {
        width: 100%;
        padding: 15px 20px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        font-size: 16px;
        transition: all 0.3s ease;
        font-family: inherit;
        background: #fff;
    }

    .form-input:focus {
        outline: none;
        border-color: #f39c12;
        box-shadow: 0 0 0 3px rgba(243, 156, 18, 0.1);
        background: #fffdf7;
    }

    .form-input.error {
        border-color: #e74c3c;
        background: #fff5f5;
    }

    .form-input.modified {
        border-color: #3498db;
        background: #f8fcff;
    }

    .form-textarea {
        min-height: 120px;
        resize: vertical;
        font-family: inherit;
        line-height: 1.5;
    }

    .form-help {
        font-size: 13px;
        color: #6c757d;
        margin-top: 5px;
        font-style: italic;
    }

    .error-message {
        color: #e74c3c;
        font-size: 13px;
        margin-top: 5px;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .error-message::before {
        content: '⚠️';
        font-size: 12px;
    }

    .changes-indicator {
        background: #fff3cd;
        border: 2px solid #ffeaa7;
        border-radius: 8px;
        padding: 15px 20px;
        margin-bottom: 20px;
        display: none;
    }

    .changes-indicator.show {
        display: block;
        animation: slideIn 0.3s ease;
    }

    .changes-indicator-title {
        font-weight: 600;
        color: #856404;
        margin-bottom: 5px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .changes-indicator-text {
        color: #856404;
        font-size: 14px;
    }

    .form-actions {
        display: flex;
        gap: 15px;
        justify-content: flex-end;
        padding-top: 20px;
        border-top: 2px solid #f8f9fa;
    }

    .btn {
        padding: 15px 30px;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        text-decoration: none;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .btn-primary {
        background: linear-gradient(135deg, #f39c12, #e67e22);
        color: white;
        border: 2px solid transparent;
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #e67e22, #f39c12);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(243, 156, 18, 0.3);
    }

    .btn-primary:disabled {
        background: #95a5a6;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }

    .btn-secondary {
        background: transparent;
        color: #6c757d;
        border: 2px solid #dee2e6;
    }

    .btn-secondary:hover {
        background: #f8f9fa;
        color: #2c3e50;
        border-color: #6c757d;
        text-decoration: none;
    }

    .btn-reset {
        background: transparent;
        color: #e67e22;
        border: 2px solid #f39c12;
    }

    .btn-reset:hover {
        background: #f39c12;
        color: white;
        border-color: #f39c12;
    }

    .alert {
        padding: 15px 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        font-weight: 500;
    }

    .alert-danger {
        background: #f8d7da;
        border: 1px solid #f5c6cb;
        color: #721c24;
    }

    .preview-section {
        background: #f8f9fa;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 20px;
        margin-top: 20px;
    }

    .preview-title {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 15px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 14px;
    }

    .preview-card {
        background: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        border-left: 4px solid #f39c12;
    }

    .preview-name {
        font-size: 18px;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 10px;
    }

    @@media (max-width: 768px) {
        .admin-page {
            padding: 20px 15px;
        }

        .admin-header {
            flex-direction: column;
            gap: 15px;
            text-align: center;
        }

        .form-body {
            padding: 30px 20px;
        }

        .form-actions {
            flex-direction: column;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }
    }

    .fade-in {
        animation: fadeInUp 0.6s ease-out;
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<main class="admin-page">
    <div class="admin-header fade-in">
        <div>
            <h1 class="admin-title">Редактирование категории</h1>
            <div class="admin-breadcrumb">
                <a href="@Url.Action("Index", "Admin")">Главная</a> / 
                <a href="@Url.Action("Categories", "Admin")">Категории</a> / 
                Редактирование
            </div>
        </div>
        <div>
            <a href="@Url.Action("Categories", "Admin")" class="back-btn">
                ← Назад к списку
            </a>
        </div>
    </div>

    @if (ViewData.ModelState.Where(x => string.IsNullOrEmpty(x.Key)).Any(x => x.Value?.Errors.Count > 0))
    {
        <div class="alert alert-danger fade-in">
            <strong>Ошибка:</strong>
            @foreach (var error in ViewData.ModelState.Where(x => string.IsNullOrEmpty(x.Key)).SelectMany(x => x.Value?.Errors ?? []))
            {
                <div>@error.ErrorMessage</div>
            }
        </div>
    }

    <form asp-action="EditCategory" asp-route-id="@categoryId" method="post" class="form-card fade-in" style="animation-delay: 0.2s;">
        @Html.AntiForgeryToken()
        
        <div class="form-header">
            <div class="form-icon">✏️</div>
            <h2 class="form-title">Редактировать категорию</h2>
            <p class="form-subtitle">Внесите изменения в существующую категорию товаров</p>
        </div>

        <div class="form-body">
            <div class="changes-indicator" id="changesIndicator">
                <div class="changes-indicator-title">
                    ⚠️ Есть несохраненные изменения
                </div>
                <div class="changes-indicator-text">
                    Вы внесли изменения в категорию. Не забудьте сохранить их.
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Name" class="form-label">Название категории *</label>
                <input asp-for="Name" 
                       class="form-input @(ViewData.ModelState["Name"]?.Errors.Count > 0 ? "error" : "")"
                       placeholder="Введите название категории..."
                       maxlength="100"
                       data-original-value="@Model.Name"
                       required />
                <div class="form-help">Название должно быть уникальным и понятным для покупателей</div>
                <span asp-validation-for="Name" class="error-message"></span>
            </div>

            <div class="preview-section">
                <div class="preview-title">Предварительный просмотр</div>
                <div class="preview-card">
                    <div class="preview-name" id="previewName">@Model.Name</div>
                </div>
            </div>

            <div class="form-actions">
                <a href="@Url.Action("Categories", "Admin")" class="btn btn-secondary">
                    ❌ Отмена
                </a>
                <button type="button" class="btn btn-reset" id="resetBtn" style="display: none;">
                    🔄 Сбросить изменения
                </button>
                <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
                    💾 Сохранить изменения
                </button>
            </div>
        </div>
    </form>
</main>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const nameInput = document.querySelector('input[name="Name"]');
        const previewName = document.getElementById('previewName');
        const submitBtn = document.getElementById('submitBtn');
        const resetBtn = document.getElementById('resetBtn');
        const changesIndicator = document.getElementById('changesIndicator');
        const form = document.querySelector('form');
        
        const originalName = nameInput.getAttribute('data-original-value') || '';
        
        function updatePreview() {
            const name = nameInput.value.trim();

            previewName.textContent = name || 'Название категории';
        }
        
        function checkForChanges() {
            const currentName = nameInput.value.trim();
            
            const nameChanged = currentName !== originalName;
            const hasChanges = nameChanged;
            const isValid = currentName.length >= 2;
            
            nameInput.classList.toggle('modified', nameChanged);
            
            if (hasChanges) {
                changesIndicator.classList.add('show');
                resetBtn.style.display = 'inline-flex';
            } else {
                changesIndicator.classList.remove('show');
                resetBtn.style.display = 'none';
            }
            
            if (hasChanges && isValid) {
                submitBtn.disabled = false;
                submitBtn.textContent = '💾 Сохранить изменения';
            } else if (!isValid) {
                submitBtn.disabled = true;
                submitBtn.textContent = '⚠️ Введите название';
            } else {
                submitBtn.disabled = true;
                submitBtn.textContent = '✓ Нет изменений';
            }
        }
        
        function resetChanges() {
            nameInput.value = originalName;
            updatePreview();
            checkForChanges();
        }
        
        nameInput.addEventListener('input', function() {
            updatePreview();
            checkForChanges();
        });
        
        resetBtn.addEventListener('click', function() {
            if (confirm('Отменить все внесенные изменения?')) {
                resetChanges();
            }
        });
        
        updatePreview();
        checkForChanges();
        
        form.addEventListener('submit', function(e) {
            const name = nameInput.value.trim();
            
            if (name.length < 2) {
                e.preventDefault();
                alert('Название категории должно содержать минимум 2 символа');
                nameInput.focus();
                return;
            }
            
            submitBtn.disabled = true;
            submitBtn.textContent = '⏳ Сохранение...';
        });
        
        const inputs = document.querySelectorAll('.form-input');
        inputs.forEach(input => {
            input.addEventListener('input', function() {
                if (this.classList.contains('error')) {
                    this.classList.remove('error');
                }
                
                const errorMsg = this.parentElement.querySelector('.error-message');
                if (errorMsg && this.value.trim()) {
                    errorMsg.style.opacity = '0';
                    setTimeout(() => {
                        errorMsg.style.display = 'none';
                    }, 300);
                }
            });

            input.addEventListener('focus', function() {
                this.style.borderColor = '#f39c12';
            });

            input.addEventListener('blur', function() {
                if (!this.value.trim() && this.hasAttribute('required')) {
                    this.style.borderColor = '#e74c3c';
                } else {
                    this.style.borderColor = '#e9ecef';
                }
            });
        });
        
        window.addEventListener('beforeunload', function(e) {
            if (changesIndicator.classList.contains('show')) {
                e.preventDefault();
                e.returnValue = '';
            }
        });

        console.log('Страница редактирования категории загружена');
    });
</script>