@model GalleryVelvet.Presentation.Models.Admin.EditProductRequestViewModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Редактирование товара";
    var productId = ViewData["ProductId"];
}

<style>
    .admin-page {
        padding: 30px 20px;
        max-width: 1000px;
        margin: 0 auto;
        min-height: calc(100vh - 70px);
        background: #f8f9fa;
    }

    .admin-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        background: white;
        padding: 25px 30px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .admin-title {
        font-size: 28px;
        font-weight: 600;
        color: #2c3e50;
        margin: 0;
    }

    .admin-breadcrumb {
        font-size: 14px;
        color: #6c757d;
    }

    .admin-breadcrumb a {
        color: #3498db;
        text-decoration: none;
    }

    .product-form {
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .form-header {
        background: linear-gradient(135deg, #34495e, #2c3e50);
        color: white;
        padding: 20px 30px;
        font-size: 18px;
        font-weight: 600;
    }

    .form-body {
        padding: 30px;
    }

    .form-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 25px;
        margin-bottom: 25px;
    }

    .form-group-full {
        grid-column: 1 / -1;
    }

    .form-group {
        display: flex;
        flex-direction: column;
    }

    .form-label {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 8px;
        font-size: 14px;
    }

    .form-input {
        padding: 12px 15px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        font-size: 14px;
        transition: all 0.3s ease;
    }

    .form-input:focus {
        outline: none;
        border-color: #3498db;
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
    }

    .form-textarea {
        resize: vertical;
        min-height: 100px;
    }

    .form-select {
        padding: 12px 15px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        background: white;
        font-size: 14px;
    }

    .checkbox-group {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 10px;
        max-height: 200px;
        overflow-y: auto;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 15px;
        background: #f8f9fa;
    }

    .checkbox-item {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .checkbox-item input {
        margin: 0;
    }

    .checkbox-item label {
        font-size: 14px;
        color: #2c3e50;
        cursor: pointer;
        margin: 0;
    }

    .existing-images {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        gap: 15px;
        margin-bottom: 20px;
    }

    .existing-image {
        position: relative;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        overflow: hidden;
        background: white;
    }

    .existing-image img {
        width: 100%;
        height: 120px;
        object-fit: cover;
    }

    .image-actions {
        position: absolute;
        top: 5px;
        right: 5px;
        display: flex;
        gap: 5px;
    }

    .delete-image-btn {
        width: 25px;
        height: 25px;
        background: #e74c3c;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .delete-image-btn:hover {
        background: #c0392b;
    }

    .file-upload {
        border: 2px dashed #3498db;
        border-radius: 8px;
        padding: 20px;
        text-align: center;
        background: #f8f9fa;
        transition: all 0.3s ease;
    }

    .file-upload:hover {
        background: #e3f2fd;
        border-color: #2980b9;
    }

    .file-upload-icon {
        font-size: 48px;
        color: #3498db;
        margin-bottom: 15px;
    }

    .file-upload-text {
        color: #6c757d;
        margin-bottom: 15px;
        line-height: 1.5;
    }

    .file-input {
        display: none;
    }

    .file-upload-btn {
        padding: 10px 20px;
        background: #3498db;
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-weight: 600;
    }

    .form-actions {
        display: flex;
        gap: 15px;
        justify-content: flex-end;
        padding-top: 20px;
        border-top: 1px solid #e9ecef;
    }

    .btn {
        padding: 12px 25px;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: linear-gradient(135deg, #27ae60, #2ecc71);
        color: white;
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #2ecc71, #27ae60);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
    }

    .btn-secondary {
        background: linear-gradient(135deg, #95a5a6, #7f8c8d);
        color: white;
    }

    .btn-secondary:hover {
        background: linear-gradient(135deg, #7f8c8d, #95a5a6);
        color: white;
        text-decoration: none;
    }

    .validation-error {
        color: #e74c3c;
        font-size: 12px;
        margin-top: 5px;
    }

    .alert {
        padding: 15px 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        font-weight: 500;
    }

    .alert-danger {
        background: #f8d7da;
        border: 1px solid #f5c6cb;
        color: #721c24;
    }

    .image-to-delete {
        opacity: 0.5;
        position: relative;
    }

    .image-to-delete::after {
        content: "УДАЛЕНО";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(231, 76, 60, 0.9);
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: bold;
    }

    @@media (max-width: 768px) {
        .admin-page {
            padding: 20px 15px;
        }

        .form-grid {
            grid-template-columns: 1fr;
            gap: 20px;
        }

        .form-actions {
            flex-direction: column;
        }

        .checkbox-group {
            grid-template-columns: 1fr;
        }

        .existing-images {
            grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
        }
    }
</style>

<main class="admin-page">
    <div class="admin-header">
        <div>
            <h1 class="admin-title">Редактирование товара</h1>
            <div class="admin-breadcrumb">
                <a href="@Url.Action("Index", "Admin")">Главная</a> / 
                <a href="@Url.Action("Products", "Admin")">Товары</a> / 
                Редактирование
            </div>
        </div>
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul style="margin: 0; padding-left: 20px;">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <form asp-action="EditProduct" asp-route-id="@productId" method="post" enctype="multipart/form-data" class="product-form">
        @Html.AntiForgeryToken()
        
        <div class="form-header">
            ✏️ Редактирование товара
        </div>

        <div class="form-body">
            <div class="form-grid">
                <div class="form-group">
                    <label asp-for="Name" class="form-label">Название товара *</label>
                    <input asp-for="Name" type="text" class="form-input" placeholder="Введите название товара">
                    <span asp-validation-for="Name" class="validation-error"></span>
                </div>

                <div class="form-group">
                    <label asp-for="CategoryId" class="form-label">Категория *</label>
                    <select asp-for="CategoryId" class="form-select">
                        <option value="">Выберите категорию</option>
                        @foreach (var category in ViewBag.Categories)
                        {
                            <option value="@category.Id" selected="@(Model.CategoryId == category.Id)">@category.Name</option>
                        }
                    </select>
                    <span asp-validation-for="CategoryId" class="validation-error"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Price" class="form-label">Цена (BYN) *</label>
                    <input asp-for="Price" type="number" step="0.01" class="form-input" placeholder="0.00">
                    <span asp-validation-for="Price" class="validation-error"></span>
                </div>

                <div class="form-group">
                    <label asp-for="DiscountPrice" class="form-label">Цена со скидкой (BYN)</label>
                    <input asp-for="DiscountPrice" type="number" step="0.01" class="form-input" placeholder="0.00">
                    <span asp-validation-for="DiscountPrice" class="validation-error"></span>
                </div>

                <div class="form-group form-group-full">
                    <label asp-for="Description" class="form-label">Описание</label>
                    <textarea asp-for="Description" class="form-input form-textarea" 
                              placeholder="Введите описание товара..."></textarea>
                    <span asp-validation-for="Description" class="validation-error"></span>
                </div>

                <div class="form-group form-group-full">
                    <label asp-for="CompositionAndCare" class="form-label">Состав и уход</label>
                    <textarea asp-for="CompositionAndCare" class="form-input form-textarea" 
                              placeholder="Укажите состав ткани и рекомендации по уходу..."></textarea>
                    <span asp-validation-for="CompositionAndCare" class="validation-error"></span>
                </div>

                <div class="form-group">
                    <label class="form-label">Теги</label>
                    <div class="checkbox-group">
                        @foreach (var tag in ViewBag.Tags)
                        {
                            var isChecked = Model.TagIds?.Contains(tag.Id) ?? false;
                            <div class="checkbox-item">
                                <input type="checkbox" name="TagIds" value="@tag.Id" id="tag_@tag.Id" 
                                       @(isChecked ? "checked" : "")>
                                <label for="tag_@tag.Id">@tag.Name</label>
                            </div>
                        }
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">Размеры</label>
                    <div class="checkbox-group">
                        @foreach (var size in ViewBag.Sizes)
                        {
                            var isChecked = Model.SizeIds?.Contains(size.Id) ?? false;
                            <div class="checkbox-item">
                                <input type="checkbox" name="SizeIds" value="@size.Id" id="size_@size.Id" 
                                       @(isChecked ? "checked" : "")>
                                <label for="size_@size.Id">@size.Label</label>
                            </div>
                        }
                    </div>
                </div>

                <div class="form-group form-group-full">
                    <label class="form-label">Изображения товара</label>
                    
                    @if (Model.ExistingImages != null && Model.ExistingImages.Any())
                    {
                        <div class="existing-images">
                            @for (int i = 0; i < Model.ExistingImages.Count; i++)
                            {
                                var image = Model.ExistingImages[i];
                                var base64Src = $"data:image/{image.Format};base64,{image.Image}";
                                
                                <div class="existing-image" data-image-id="@image.Id">
                                    <img src="@base64Src" alt="Изображение товара" />
                                    <div class="image-actions">
                                        <button type="button" class="delete-image-btn" onclick="toggleImageDelete('@image.Id')">
                                            🗑️
                                        </button>
                                    </div>
                                    
                                    <input type="hidden" name="ExistingImages[@i].Id" value="@image.Id" />
                                    <input type="hidden" name="ExistingImages[@i].Image" value="@image.Image" />
                                    <input type="hidden" name="ExistingImages[@i].Format" value="@image.Format" />
                                </div>
                            }
                        </div>
                    }
                    
                    <div class="file-upload">
                        <div class="file-upload-icon">📸</div>
                        <div class="file-upload-text">
                            Добавить новые изображения<br>
                            <small>Поддерживаются форматы: JPG, PNG, GIF, WebP</small>
                        </div>
                        <input asp-for="Images" type="file" multiple accept="image/*" class="file-input" id="imageInput">
                        <button type="button" class="file-upload-btn" onclick="document.getElementById('imageInput').click()">
                            Выбрать файлы
                        </button>
                    </div>
                    <span asp-validation-for="Images" class="validation-error"></span>
                </div>
            </div>

            <div class="form-actions">
                <a href="@Url.Action("Products", "Admin")" class="btn btn-secondary">
                    ← Отмена
                </a>
                <button type="submit" class="btn btn-primary">
                    💾 Сохранить изменения
                </button>
            </div>
        </div>
    </form>
</main>

<script>
    const imagesToDelete = [];

    function toggleImageDelete(imageId) {
        const imageElement = document.querySelector(`[data-image-id="${imageId}"]`);
        
        if (imagesToDelete.includes(imageId)) {
            const index = imagesToDelete.indexOf(imageId);
            imagesToDelete.splice(index, 1);
            imageElement.classList.remove('image-to-delete');
        } else {
            imagesToDelete.push(imageId);
            imageElement.classList.add('image-to-delete');
        }
        
        updateImagesToDeleteInput();
    }

    function updateImagesToDeleteInput() {
        const existingInputs = document.querySelectorAll('input[name="ImagesToDelete"]');
        existingInputs.forEach(input => input.remove());
        
        const form = document.querySelector('.product-form');
        imagesToDelete.forEach(imageId => {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'ImagesToDelete';
            input.value = imageId;
            form.appendChild(input);
        });
    }

    document.addEventListener('DOMContentLoaded', function() {
        const fileInput = document.getElementById('imageInput');
        const fileUpload = document.querySelector('.file-upload');
        
        fileInput.addEventListener('change', function() {
            const files = this.files;
            if (files.length > 0) {
                const fileText = document.querySelector('.file-upload-text');
                if (files.length === 1) {
                    fileText.innerHTML = `Выбран новый файл: ${files[0].name}`;
                } else {
                    fileText.innerHTML = `Выбрано новых файлов: ${files.length}`;
                }
            }
        });
        
        fileUpload.addEventListener('dragover', function(e) {
            e.preventDefault();
            this.style.backgroundColor = '#e3f2fd';
        });
        
        fileUpload.addEventListener('dragleave', function(e) {
            e.preventDefault();
            this.style.backgroundColor = '#f8f9fa';
        });
        
        fileUpload.addEventListener('drop', function(e) {
            e.preventDefault();
            this.style.backgroundColor = '#f8f9fa';
            
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                fileInput.files = files;
                const event = new Event('change');
                fileInput.dispatchEvent(event);
            }
        });

        console.log('Страница редактирования товара загружена');
    });
</script>