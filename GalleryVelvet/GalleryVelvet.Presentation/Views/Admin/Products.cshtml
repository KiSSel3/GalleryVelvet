@model GalleryVelvet.Presentation.Models.Admin.ProductsAdminViewModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Управление товарами";
}

<style>
    .admin-page {
        padding: 30px 20px;
        max-width: 1400px;
        margin: 0 auto;
        min-height: calc(100vh - 70px);
        background: #f8f9fa;
    }

    .admin-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        background: white;
        padding: 25px 30px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .admin-title {
        font-size: 28px;
        font-weight: 600;
        color: #2c3e50;
        margin: 0;
    }

    .admin-breadcrumb {
        font-size: 14px;
        color: #6c757d;
    }

    .admin-breadcrumb a {
        color: #3498db;
        text-decoration: none;
    }

    .admin-breadcrumb a:hover {
        text-decoration: underline;
    }

    .header-actions {
        display: flex;
        gap: 10px;
    }

    .btn {
        padding: 12px 20px;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
        font-size: 14px;
    }

    .btn-success {
        background: linear-gradient(135deg, #27ae60, #2ecc71);
        color: white;
    }

    .btn-success:hover {
        background: linear-gradient(135deg, #2ecc71, #27ae60);
        color: white;
        text-decoration: none;
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
    }

    .admin-filters {
        background: white;
        padding: 25px 30px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        margin-bottom: 30px;
    }

    .filters-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        align-items: end;
    }

    .filter-group {
        display: flex;
        flex-direction: column;
    }

    .filter-label {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 8px;
        font-size: 14px;
    }

    .filter-input {
        padding: 12px 15px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        font-size: 14px;
        transition: all 0.3s ease;
    }

    .filter-input:focus {
        outline: none;
        border-color: #3498db;
        box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
    }

    .filter-btn {
        padding: 12px 25px;
        background: linear-gradient(135deg, #3498db, #2980b9);
        color: white;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .filter-btn:hover {
        background: linear-gradient(135deg, #2980b9, #3498db);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(52, 152, 219, 0.3);
    }

    .products-table {
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .table-header {
        background: linear-gradient(135deg, #34495e, #2c3e50);
        color: white;
        padding: 20px 30px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .table-title {
        font-size: 18px;
        font-weight: 600;
        margin: 0;
    }

    .table-count {
        font-size: 14px;
        opacity: 0.9;
    }

    .table-wrapper {
        overflow-x: auto;
    }

    .products-grid {
        width: 100%;
        border-collapse: collapse;
    }

    .products-grid th,
    .products-grid td {
        padding: 15px 20px;
        text-align: left;
        border-bottom: 1px solid #e9ecef;
        vertical-align: top;
    }

    .products-grid th {
        background: #f8f9fa;
        font-weight: 600;
        color: #2c3e50;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .products-grid tr:hover {
        background: #f8f9fa;
    }

    .product-info {
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .product-image {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
        border: 2px solid #e9ecef;
        flex-shrink: 0;
    }

    .product-details h5 {
        margin: 0 0 5px 0;
        font-size: 16px;
        font-weight: 600;
        color: #2c3e50;
    }

    .product-details p {
        margin: 0;
        font-size: 12px;
        color: #6c757d;
        line-height: 1.4;
    }

    .product-category {
        background: #e3f2fd;
        color: #1976d2;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
        display: inline-block;
    }

    .product-price {
        font-weight: 600;
        color: #27ae60;
        font-size: 16px;
    }

    .product-price-old {
        text-decoration: line-through;
        color: #6c757d;
        font-size: 14px;
        margin-right: 8px;
    }

    .product-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 4px;
        max-width: 150px;
    }

    .tag-badge {
        background: #f8f9fa;
        color: #6c757d;
        padding: 2px 6px;
        border-radius: 8px;
        font-size: 10px;
        border: 1px solid #e9ecef;
    }

    .product-sizes {
        display: flex;
        flex-wrap: wrap;
        gap: 4px;
        max-width: 120px;
    }

    .size-badge {
        background: #e8f5e8;
        color: #2e7d32;
        padding: 2px 6px;
        border-radius: 4px;
        font-size: 10px;
        font-weight: 600;
        border: 1px solid #c8e6c9;
    }

    .status-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-active {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .status-deleted {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    .action-buttons {
        display: flex;
        gap: 6px;
        flex-wrap: wrap;
    }

    .action-btn {
        padding: 6px 10px;
        border: none;
        border-radius: 4px;
        font-size: 11px;
        font-weight: 600;
        cursor: pointer;
        text-decoration: none;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 4px;
    }

    .action-btn-edit {
        background: #3498db;
        color: white;
    }

    .action-btn-edit:hover {
        background: #2980b9;
        color: white;
        text-decoration: none;
        transform: translateY(-1px);
    }

    .action-btn-delete {
        background: #e74c3c;
        color: white;
    }

    .action-btn-delete:hover {
        background: #c0392b;
        transform: translateY(-1px);
    }

    .action-btn-restore {
        background: #27ae60;
        color: white;
    }

    .action-btn-restore:hover {
        background: #229954;
        transform: translateY(-1px);
    }

    .action-btn-hard-delete {
        background: #8e44ad;
        color: white;
    }

    .action-btn-hard-delete:hover {
        background: #7d3c98;
        transform: translateY(-1px);
    }

    .pagination {
        padding: 20px 30px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: #f8f9fa;
        border-top: 1px solid #e9ecef;
    }

    .pagination-info {
        color: #6c757d;
        font-size: 14px;
    }

    .pagination-links {
        display: flex;
        gap: 8px;
    }

    .pagination-link {
        padding: 8px 12px;
        border: 1px solid #dee2e6;
        border-radius: 6px;
        color: #3498db;
        text-decoration: none;
        transition: all 0.3s ease;
    }

    .pagination-link:hover {
        background: #3498db;
        color: white;
        text-decoration: none;
    }

    .pagination-link.active {
        background: #3498db;
        color: white;
        border-color: #3498db;
    }

    .pagination-link.disabled {
        color: #6c757d;
        background: #f8f9fa;
        cursor: not-allowed;
    }

    .empty-state {
        text-align: center;
        padding: 60px 30px;
        color: #6c757d;
    }

    .empty-state-icon {
        font-size: 48px;
        margin-bottom: 20px;
        opacity: 0.5;
    }

    .empty-state-text {
        font-size: 18px;
        margin-bottom: 10px;
    }

    .empty-state-subtext {
        font-size: 14px;
        opacity: 0.7;
    }

    .alert {
        padding: 15px 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        font-weight: 500;
    }

    .alert-success {
        background: #d4edda;
        border: 1px solid #c3e6cb;
        color: #155724;
    }

    .alert-danger {
        background: #f8d7da;
        border: 1px solid #f5c6cb;
        color: #721c24;
    }

    @@media (max-width: 768px) {
    .admin-page {
        padding: 20px 15px;
    }

    .admin-header {
        flex-direction: column;
        gap: 15px;
        text-align: center;
    }

    .filters-row {
        grid-template-columns: 1fr;
        gap: 15px;
    }

    .table-wrapper {
        border-radius: 0;
    }

    .products-grid th,
    .products-grid td {
        padding: 10px 15px;
        font-size: 14px;
    }

    .product-info {
        flex-direction: column;
        text-align: center;
    }

    .action-buttons {
        flex-direction: column;
    }

    .pagination {
        flex-direction: column;
        gap: 15px;
    }
    }
</style>

<main class="admin-page">
    <div class="admin-header">
        <div>
            <h1 class="admin-title">Управление товарами</h1>
            <div class="admin-breadcrumb">
                <a href="@Url.Action("Index", "Admin")">Главная</a> / Товары
            </div>
        </div>
        <div class="header-actions">
            <a href="@Url.Action("CreateProduct", "Admin")" class="btn btn-success">
                ➕ Создать товар
            </a>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["Error"]
        </div>
    }

    <form method="get" class="admin-filters">
        <div class="filters-row">
            <div class="filter-group">
                <label class="filter-label">Поиск</label>
                <input type="text" name="searchTerm" value="@Model.SearchTerm"
                       class="filter-input" placeholder="Поиск по названию товара...">
            </div>

            <div class="filter-group">
                <label class="filter-label">Категория</label>
                <select name="categoryId" class="filter-input">
                    <option value="">Все категории</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.Id" selected="@(Model.SelectedCategoryId == category.Id)">
                            @category.Name
                        </option>
                    }
                </select>
            </div>

            <div class="filter-group">
                <label class="filter-label">Показать удаленные</label>
                <select name="includeDeleted" class="filter-input">
                    <option value="false" selected="@(!Model.IncludeDeleted)">Только активные</option>
                    <option value="true" selected="@Model.IncludeDeleted">Включая удаленные</option>
                </select>
            </div>

            <div class="filter-group">
                <button type="submit" class="filter-btn">
                    🔍 Поиск
                </button>
            </div>
        </div>
    </form>

    <div class="products-table">
        <div class="table-header">
            <h3 class="table-title">Список товаров</h3>
            <div class="table-count">
                Найдено: @Model.Products.MetaData.TotalCount товаров
            </div>
        </div>

        @if (Model.Products.Any())
        {
            <div class="table-wrapper">
                <table class="products-grid">
                    <thead>
                    <tr>
                        <th>Товар</th>
                        <th>Категория</th>
                        <th>Цена</th>
                        <th>Теги</th>
                        <th>Размеры</th>
                        <th>Статус</th>
                        <th>Действия</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var product in Model.Products)
                    {
                        var firstImage = product.Images.FirstOrDefault();
                        var imageSrc = firstImage != null
                            ? $"data:image/{firstImage.Format};base64,{firstImage.Image}"
                            : "/images/no-image_0.jpg";

                        <tr>
                            <td>
                                <div class="product-info">
                                    <img src="@imageSrc" alt="@product.Name" class="product-image" />
                                    <div class="product-details">
                                        <h5>@product.Name</h5>
                                        @if (!string.IsNullOrWhiteSpace(product.Description))
                                        {
                                            <p>@(product.Description.Length > 80 ? product.Description.Substring(0, 80) + "..." : product.Description)</p>
                                        }
                                    </div>
                                </div>
                            </td>
                            <td>
                                <span class="product-category">@product.Category.Name</span>
                            </td>
                            <td>
                                <div class="product-price">
                                    @if (product.DiscountPrice.HasValue)
                                    {
                                        <span class="product-price-old">@product.Price.ToString("N0") BYN</span>
                                        <span>@product.DiscountPrice.Value.ToString("N0") BYN</span>
                                    }
                                    else
                                    {
                                        <span>@product.Price.ToString("N0") BYN</span>
                                    }
                                </div>
                            </td>
                            <td>
                                <div class="product-tags">
                                    @foreach (var productTag in product.ProductTags.Take(3))
                                    {
                                        <span class="tag-badge">@productTag.Tag.Name</span>
                                    }
                                    @if (product.ProductTags.Count > 3)
                                    {
                                        <span class="tag-badge">+@(product.ProductTags.Count - 3)</span>
                                    }
                                </div>
                            </td>
                            <td>
                                <div class="product-sizes">
                                    @foreach (var productSize in product.ProductSizes.Take(4))
                                    {
                                        <span class="size-badge">@productSize.Size.Label</span>
                                    }
                                    @if (product.ProductSizes.Count > 4)
                                    {
                                        <span class="size-badge">+@(product.ProductSizes.Count - 4)</span>
                                    }
                                </div>
                            </td>
                            <td>
                                @if (product.IsDeleted)
                                {
                                    <span class="status-badge status-deleted">Удален</span>
                                }
                                else
                                {
                                    <span class="status-badge status-active">Активен</span>
                                }
                            </td>
                            <td>
                                <div class="action-buttons">
                                    @if (!product.IsDeleted)
                                    {
                                        <a href="@Url.Action("EditProduct", "Admin", new { id = product.Id })"
                                           class="action-btn action-btn-edit">
                                            ✏️ Редактировать
                                        </a>

                                        <form asp-action="DeleteProduct" asp-route-id="@product.Id" method="post" style="display: inline;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="hardDelete" value="false" />
                                            <button type="submit" class="action-btn action-btn-delete"
                                                    onclick="return confirm('Вы уверены, что хотите удалить этот товар?')">
                                                🗑️ Удалить
                                            </button>
                                        </form>
                                    }
                                    else
                                    {
                                        <form asp-action="RestoreProduct" asp-route-id="@product.Id" method="post" style="display: inline;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="action-btn action-btn-restore">
                                                ↩️ Восстановить
                                            </button>
                                        </form>

                                        <form asp-action="DeleteProduct" asp-route-id="@product.Id" method="post" style="display: inline;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="hardDelete" value="true" />
                                            <button type="submit" class="action-btn action-btn-hard-delete"
                                                    onclick="return confirm('ВНИМАНИЕ! Это действие нельзя отменить. Удалить товар навсегда?')">
                                                💀 Удалить навсегда
                                            </button>
                                        </form>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>

            <div class="pagination">
                <div class="pagination-info">
                    Показано @((Model.Products.MetaData.CurrentPage - 1) * Model.Products.MetaData.PageSize + 1) -
                    @Math.Min(Model.Products.MetaData.CurrentPage * Model.Products.MetaData.PageSize, Model.Products.MetaData.TotalCount)
                    из @Model.Products.MetaData.TotalCount товаров
                </div>

                <div class="pagination-links">
                    @if (Model.Products.MetaData.HasPrevious)
                    {
                        <a href="@Url.Action("Products", "Admin", new {
                                     pageNumber = Model.Products.MetaData.CurrentPage - 1,
                                     searchTerm = Model.SearchTerm,
                                     categoryId = Model.SelectedCategoryId,
                                     includeDeleted = Model.IncludeDeleted
                                 })" class="pagination-link">« Назад</a>
                    }
                    else
                    {
                        <span class="pagination-link disabled">« Назад</span>
                    }

                    @for (int i = Math.Max(1, Model.Products.MetaData.CurrentPage - 2);
                          i <= Math.Min(Model.Products.MetaData.TotalPages, Model.Products.MetaData.CurrentPage + 2);
                          i++)
                    {
                        if (i == Model.Products.MetaData.CurrentPage)
                        {
                            <span class="pagination-link active">@i</span>
                        }
                        else
                        {
                            <a href="@Url.Action("Products", "Admin", new {
                                         pageNumber = i,
                                         searchTerm = Model.SearchTerm,
                                         categoryId = Model.SelectedCategoryId,
                                         includeDeleted = Model.IncludeDeleted
                                     })" class="pagination-link">@i</a>
                        }
                    }

                    @if (Model.Products.MetaData.HasNext)
                    {
                        <a href="@Url.Action("Products", "Admin", new {
                                     pageNumber = Model.Products.MetaData.CurrentPage + 1,
                                     searchTerm = Model.SearchTerm,
                                     categoryId = Model.SelectedCategoryId,
                                     includeDeleted = Model.IncludeDeleted
                                 })" class="pagination-link">Вперед »</a>
                    }
                    else
                    {
                        <span class="pagination-link disabled">Вперед »</span>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-state-icon">📦</div>
                <div class="empty-state-text">Товары не найдены</div>
                <div class="empty-state-subtext">Попробуйте изменить параметры фильтрации или создайте новый товар</div>
            </div>
        }
    </div>
</main>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const filters = document.querySelectorAll('.filter-input');
        filters.forEach(filter => {
            if (filter.tagName === 'SELECT') {
                filter.addEventListener('change', function() {
                    this.form.submit();
                });
            }
        });

        const tableRows = document.querySelectorAll('.products-grid tbody tr');
        tableRows.forEach(row => {
            row.addEventListener('mouseenter', function() {
                this.style.backgroundColor = '#e3f2fd';
            });

            row.addEventListener('mouseleave', function() {
                this.style.backgroundColor = '';
            });
        });

        console.log('Страница управления товарами загружена');
    });
</script>